<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.dmlloyd</groupId>
    <artifactId>loomania</artifactId>
    <version>2.1-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <version.build-helper-maven-plugin>3.2.0</version.build-helper-maven-plugin>
        <version.maven-antrun-plugin>3.1.0</version.maven-antrun-plugin>
        <version.maven-compiler-plugin>3.10.1</version.maven-compiler-plugin>
        <version.maven-resources-plugin>3.3.1</version.maven-resources-plugin>
        <version.maven-gpg-plugin>3.0.1</version.maven-gpg-plugin>
        <version.maven-install-plugin>2.5.2</version.maven-install-plugin>
        <version.maven-jar-plugin>3.2.2</version.maven-jar-plugin>
        <version.maven-javadoc-plugin>3.4.1</version.maven-javadoc-plugin>
        <version.maven-source-plugin>3.2.1</version.maven-source-plugin>
        <version.maven-surefire-plugin>2.22.2</version.maven-surefire-plugin>
        <version.nexus-staging-maven-plugin>1.6.7</version.nexus-staging-maven-plugin>
        <version.versions-maven-plugin>2.9.0</version.versions-maven-plugin>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.9.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <name>Loomania</name>
    <description>A series of questionable hacks to allow for unconventional experimentation with Loom</description>
    <url>https://github.com/dmlloyd/loomania</url>

    <developers>
        <developer>
            <id>dmlloyd</id>
            <name>David M. Lloyd</name>
            <email>david.lloyd@redhat.com</email>
            <organization>Red Hat, Inc.</organization>
            <organizationUrl>https://redhat.com/en</organizationUrl>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/dmlloyd/loomania</url>
        <connection>scm:git:git@github.com:dmlloyd/loomania.git</connection>
        <developerConnection>scm:git:git@github.com:dmlloyd/loomania.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/dmlloyd/loomania/issues</url>
    </issueManagement>

    <distributionManagement>
        <snapshotRepository>
            <id>oss.sonatype</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>oss.sonatype</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.maven-compiler-plugin}</version>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <configuration>
                            <release>11</release>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-testCompile</id>
                        <configuration>
                            <release>19</release>
                        </configuration>
                    </execution>
                    <execution>
                        <id>java19-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <source>19</source>
                            <target>19</target>
                            <compileSourceRoots>
                                <compileSourceRoot>${project.build.directory}/java19-sources</compileSourceRoot>
                            </compileSourceRoots>
                            <compilePath>${project.build.outputDirectory}</compilePath>
                            <outputDirectory>${project.build.directory}/java19-classes</outputDirectory>
                            <compilerArgs>
                                <compilerArg>--add-exports=java.base/jdk.internal.vm=ALL-UNNAMED</compilerArg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${version.maven-resources-plugin}</version>
                <executions>
                    <execution>
                        <id>copy-java19-sources</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <outputDirectory>${project.build.directory}/java19-sources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/main/java19</directory>
                                    <filtering>false</filtering>
                                </resource>
                                <resource>
                                    <directory>${project.build.sourceDirectory}</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-java19-classes</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>process-classes</phase>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}/META-INF/versions/19</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/java19-classes</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${version.maven-javadoc-plugin}</version>
                <configuration>
                    <failOnWarnings>false</failOnWarnings>
                    <failOnError>false</failOnError>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <version>${version.maven-install-plugin}</version>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${version.maven-jar-plugin}</version>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <configuration>
                            <archive>
                                <manifestEntries>
                                    <Multi-Release>true</Multi-Release>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>${version.maven-gpg-plugin}</version>
                <configuration>
                    <gpgArguments>
                        <argument>--pinentry-mode</argument>
                        <argument>loopback</argument>
                    </gpgArguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${version.versions-maven-plugin}</version>
                <configuration>
                    <generateBackupPoms>false</generateBackupPoms>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>${version.maven-source-plugin}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                        <configuration>
                            <skipSource>true</skipSource>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${version.maven-antrun-plugin}</version>
                <executions>
                    <execution>
                        <id>attach-sources-our-way</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <jar destfile="${project.build.directory}/${project.build.finalName}-sources.jar">
                                    <fileset dir="${project.basedir}/src/main/java" includes="**/*.java" excludes="**/Loomania.java"/>
                                    <fileset dir="${project.basedir}/src/main/java19" includes="**/*.java"/>
                                    <zipfileset prefix="META-INF/maven/${project.groupId}/${project.artifactId}/" dir="${project.build.directory}/maven-archiver" includes="pom.properties"/>
                                    <zipfileset prefix="META-INF/maven/${project.groupId}/${project.artifactId}/" dir="${project.basedir}" includes="pom.xml"/>

                                    <manifest>
                                        <attribute name="Created-By" value="Maven Source Plugin ${version.maven-source-plugin}"/>
                                        <attribute name="Actually-Created-By" value="Antrun plugin because Maven is bad"/>
                                        <attribute name="Build-Jdk-Spec" value="19"/>
                                    </manifest>
                                </jar>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${version.build-helper-maven-plugin}</version>
                <executions>
                    <execution>
                        <id>make-sure-sources-are-attached</id>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${project.build.directory}/${project.build.finalName}-sources.jar</file>
                                    <classifier>sources</classifier>
                                    <type>jar</type>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.maven-surefire-plugin}</version>
                <configuration>
                    <includes>
                        <include>**/*TestCase.java</include>
                    </includes>
                    <argLine>--add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/jdk.internal.vm=ALL-UNNAMED</argLine>
                    <trimStackTrace>false</trimStackTrace>
                    <classesDirectory>target/META-INF/versions/19</classesDirectory>
                    <additionalClasspathElements>
                        <additionalClasspathElement>target/test-classes</additionalClasspathElement>
                    </additionalClasspathElements>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>release</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>${version.nexus-staging-maven-plugin}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                            <stagingProgressTimeoutMinutes>10</stagingProgressTimeoutMinutes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>